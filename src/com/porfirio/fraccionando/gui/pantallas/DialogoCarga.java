package com.porfirio.fraccionando.gui.pantallas;

import com.porfirio.fraccionando.gui.componentes.RoundedPanel;
import com.porfirio.fraccionando.latex.LatexRender;
import com.porfirio.fraccionando.main.Configuracion;

/**
 * Este cuadro de dialogo es el que se muestra al iniciar la aplicacion,
 * permanece abierto mientras el programa carga y hace las operaciones
 * necesarias antes de iniciar.
 *
 * @author Porfirio Angel Diaz Sanchez [porfirioads@gmail.com]
 */
public class DialogoCarga extends javax.swing.JDialog {

    /**
     * Creates new form DialogoCarga.
     *
     * @param parent Es el padre del dialogo.
     * @param modal Determina si sera un dialogo modal o no.
     */
    public DialogoCarga(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Configuracion.inicializar();
        initComponents();
        iniciarGUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelFondoOscuro = new javax.swing.JPanel();
        jPanelFondoClaro = new RoundedPanel(50);
        jPanelContenido = new RoundedPanel(50);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fraccionando");
        setBackground(Configuracion.colorClaro);
        setUndecorated(true);
        setPreferredSize(Configuracion.porcentajePantalla(30));
        setSize(new java.awt.Dimension(0, 0));

        jPanelFondoOscuro.setBackground(Configuracion.colorOscuro);
        jPanelFondoOscuro.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanelFondoOscuro.setLayout(new java.awt.BorderLayout());

        jPanelFondoClaro.setBackground(Configuracion.colorClaro);
        jPanelFondoClaro.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanelFondoClaro.setLayout(new java.awt.BorderLayout());

        jPanelContenido.setBackground(new java.awt.Color(255, 255, 255));
        jPanelContenido.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanelContenido.setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/porfirio/fraccionando/resources/images/loader.gif"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanelContenido.add(jLabel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/porfirio/fraccionando/resources/images/TituloFraccionando.png"))); // NOI18N
        jPanelContenido.add(jLabel2, new java.awt.GridBagConstraints());

        jPanelFondoClaro.add(jPanelContenido, java.awt.BorderLayout.CENTER);

        jPanelFondoOscuro.add(jPanelFondoClaro, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelFondoOscuro, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        DialogoCarga dialog = new DialogoCarga(new javax.swing.JFrame(), true);

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                dialog.setVisible(true);
            }
        });

        dialog.prepararComponentes();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelContenido;
    private javax.swing.JPanel jPanelFondoClaro;
    private javax.swing.JPanel jPanelFondoOscuro;
    // End of variables declaration//GEN-END:variables
    /**
     * Inicializa aspectos de la gui, que no se pueden colocar en el metodo
     * initComponents.
     */
    private void iniciarGUI() {
        setLocationRelativeTo(null);
    }

    /**
     * Prepara los componentes necesarios para el funcionamiento de la
     * aplicacion, para que luego inicie pantalla principal.
     */
    private void prepararComponentes() {
        new Runnable() {

            @Override
            public void run() {
                LatexRender.render("prueba", "hola mundo", true);

                PantallaPrincipal.main(new String[]{});
                dispose();
            }

        }.run();
    }

}
